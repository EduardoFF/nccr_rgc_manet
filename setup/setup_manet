#!/bin/bash


# some default parameters #
NODEID=1
TXPOWER=20
CHANNEL=1
WLAN=wlan19
CLICKSCRIPT=/root/click_scripts/rnp_scripts/rnp_linux_args_aligned.click
INITROUTES=""
XROUTES=""
ETH=eth0
BRIDGED=0
QUIET=0
DEBUG=0
UNBUFFERED=true
export CLICKPATH=/usr/local/bin
export CLICKAPP=RNP_PKGclick
USE_IW=0
QUEUESIZE=50

print_help()
{
    echo "setup_manet: xxxx"
}
export -f print_help


cleanup() {
    touch /logs/smtrapped
    echo "cleaning -${CLICKAPP}- " > /logs/smtrapped
    pkill -f ${CLICKAPP}
    RVAL=$(ip route list | grep -ci fake0)
    if [[ $RVAL == "1" ]]; then 
	ip link delete fake0
    fi    
}

export -f cleanup
trap 'cleanup' INT TERM HUP



while [ $# -gt 0 ]
do
    key="$1"
    case $key in
	-n|---node-id)
	    NODEID="$2"
	    shift # past argument
	    ;;
	-p|--power)
	    TXPOWER="$2"
	    shift # past argument
	    ;;
	-c|--channel)
	    CHANNEL="$2"
	    shift # past argument
	    ;;
	-i|--interface)
	    WLAN="$2"
	    shift
	    ;;
	--quiet)
	    QUIET=1
	    #shift
	    ;;
	--iw)
	    USE_IW=1
	    #shift
	    ;;
	--eth)
	    ETH="$2"
	    shift
	    ;;
	--bridged)
	    BRIDGED=1
	    #shift
	    ;;
	-s|--click-script)
	    CLICKSCRIPT="$2"
	    shift
	    ;;
	-r|--init-routes)
	    INITROUTES="$2"
	    echo "using init routes $INITROUTES"
	    shift
	    ;;
	-x|--initx-routes)
	    XROUTES="$2"
	    echo "using init routes $XROUTES"
	    shift
	    ;;
	-d|--debug)
	    DEBUG="$2"
	    echo "using debug level $DEBUG"
	    shift
	    ;;

	-h|--help)
	    print_help
	    exit
	    shift
	    ;;
	*)
            # unknown option
	    print_help
	    exit
	    ;;
    esac
    shift # past argument or value
done

echo "using:"
echo "NODEID=${NODEID}"
echo "TXPOWER=${TXPOWER}"
echo "CHANNEL=${CHANNEL}"
echo "WLAN=${WLAN}"
echo "BRIDGED=${BRIDGED}"



IPPREFIX=10.42.43
NETMASK=24

IPADDR=${IPPREFIX}.${NODEID}
ETHM=""
ETHIPADDR=""

if [ -f "/sys/class/net/${WLAN}/operstate" ];
then
   echo "${WLAN} found"
else
	echo "wlan interface ${WLAN} not found"
	exit
fi


cleanup


WLANM=`cat /sys/class/net/${WLAN}/address`
if [ "${BRIDGED}" != 0 ]; then
    CLICKAPP=RNP_CLIENT_PKGclick
    ETHIPADDR=$(ip addr | grep inet | grep ${ETH} | awk -F" " '{print $2}' | sed -e 's/\/.*$//')
    ETHM=`cat /sys/class/net/${ETH}/address`
    echo "bridged mode on ${ETH} - ${ETHIPADDR} ${ETHM}"
fi
#echo ${WLANM}
SETUP_WLAN_SCRIPT=/usr/local/bin/setup_wlan
if [ "${USE_IW}" != 0 ]; then
    echo "using iw script"
    SETUP_WLAN_SCRIPT=setup_wlan_iw
fi



CTIME=$(env TZ=":Europe/Rome" date +%Y%m%d_%H%M%S)
export CTIME
CLICKLOGFILE="/logs/${CTIME}-click.log"
CLICKCURRENTLOG="/logs/click.log"
CLICKDUMPFOLDER=/logs/click_dumps/${CTIME}
CLICKCURRENTDUMP=/logs/click_dumps/current
mkdir -p ${CLICKDUMPFOLDER}
rm -f ${CLICKCURRENTDUMP}





check_click()
{
  # check routes
  RVAL=$(ip route list | grep -ci fake0)
  if [[ $RVAL == "0" ]]; then 
      echo "WARNING: no route for fake0 - retval: $RVAL"
      return 0
  fi
  # check click running
  RVAL=$(pidof ${CLICKAPP})
  #echo "pidof clickapp ${RVAL}"
  if [[ -z $RVAL ]]; then 
    echo "ERROR: click not running"
    return 0
  fi

  RVAL=$(grep -ci 'Network is down' ${CLICKCURRENTLOG})
  if [[ $RVAL != "0" ]]; then 
      echo "Network down in log"
      return 0
  fi
  return 1
}

export -f check_click




echo "setting up wlan"

${SETUP_WLAN_SCRIPT} ${WLAN} ${IPADDR}/${NETMASK} ${CHANNEL} ${TXPOWER} 

ifconfig lo multicast
route add -net 224.0.0.0 netmask 240.0.0.0 dev lo


#if [ "${BRIDGED}" == 0 ]; then
ip route del to ${IPPREFIX}.0/${NETMASK}
#fi

if [ "${BRIDGED}" != 0 ]; then
route add -net 224.0.0.0 netmask 240.0.0.0 dev ${ETH}
fi


echo "starting click"

cd ${CLICKDUMPFOLDER} && ${CLICKPATH}/${CLICKAPP} WLANMAC=${WLANM} \
				     WLANINTERFACE=${WLAN} ADHOCIP=${IPADDR}/${NETMASK} \
				     ETHINTERFACE=${ETH} ETHIP=${ETHIPADDR}/${NETMASK} \
				     ETHMAC=${ETHM} DEBUG=${DEBUG} \
				     UNBUF=${UNBUFFERED} \
				     QSIZE=${QUEUESIZE} \
				     ${CLICKSCRIPT} &> ${CLICKLOGFILE} &
ln -f -s ${CLICKLOGFILE} ${CLICKCURRENTLOG}
ln -f -s ${CLICKDUMPFOLDER} ${CLICKCURRENTDUMP}
sleep 5
if [ -n "${INITROUTES}" ]; then
    echo "sending default routes ..."
    python -m publish_route2_tree --local -c RNP2 ${IPADDR} `cat ${INITROUTES} | tr '\n' ' '`
fi

if [ -n "${XROUTES}" ]; then
    echo "sending xroutes ..."
    python -m publish_route2_tree --local -c RNP2 -f ${XROUTES}
fi
if [ "${QUIET}" == 0 ]; then
    read -p "Press any key to finish"
    kill -9 $(pidof ${CLICKAPP})
    echo "Finished."
else
    while true;
    do
	check_click
	if [[ "$?" == "0" ]];
	then	
	   echo "click failed"
	   cleanup
	   exit
	fi
	echo "clickok"
	sleep 1
    done
fi

    
    
    


   

